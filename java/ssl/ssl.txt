/* Resolving javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed Error? */

https://stackoverflow.com/questions/9619030/resolving-javax-net-ssl-sslhandshakeexception-sun-security-validator-validatore

https://www.sslshopper.com/article-most-common-java-keytool-keystore-commands.html
/* Create Self Signed Certificate */
/* https://dzone.com/articles/create-a-self-signed-ssl-certificate-using-openssl */
openssl genrsa -des3 -out server.key 2048
openssl req -new -key server.key -out server.csr
openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt

openssl genrsa -out tomcat2.key 2048
openssl rsa -in tomcat1.key -pubout -out tomcat1pub.key
openssl req -new -key tomcat1.key -out tomcat1.csr
openssl req -text -in tomcat2.csr -noout -verify
openssl x509 -in tomcat2.csr -out tomcat2.crt -req -signkey tomcat2.key -days 365
keytool -import -alias alias1 -file tomcat2.crt -keypass keypass -keystore yourkeystore.jks -storepass Hello1
keytool -list -keystore yourkeystore.jks -storepass Hello1

keytool -import -alias tomcat -file tomcat2.crt -keypass keypass -keystore yourkeystore.jks -storepass tomcat2
keytool -list -v -keystore yourkeystore.jks -storepass tomcat2
keytool -list -v -keystore yourkeystore.jks -storepass tomcat2 -alias tomcat

keytool -printcert -v -file mydomain.crt
keytool -printcert -v -file ~/Downloads/DigiCertTLSHybridECCSHA3842020CA1-1.crt 
openssl x509 -in ~/Downloads/gts1c3.der -inform der -text
 openssl x509 -in acs.cdroutertest.com.pem -text

 keytool -printcert -file certificate.pem

keytool -list -v -keystore <path to keystore.pfx> \
    -storepass <password> \
    -storetype PKCS12

keytool -list -v -keystore nucleus.p12 -storepass password -storetype pkcs12


/* list keystore contents */
https://www.sslshopper.com/article-most-common-java-keytool-keystore-commands.html

/* Create Keystore PKCS12 format */
/* https://dzone.com/articles/how-to-create-a-keystore-in-pkcs12-format */
cat server.key > server.pem
cat server.crt >> server.pem
openssl pkcs12 -export -in server.pem -out keystore.pkcs12

/* Generate Key Store */
/* https://docs.oracle.com/cd/E29805_01/server.230/es_admin/src/tadm_ssl_jetty_keystore.html */
keytool -genkey -alias server -validity 365 -keyalg RSA -keystore keystore
keytool -genkeypair -keyalg RSA -keysize 2048 -alias stackoverflow -dname "CN=stackoverflow,OU=Hakan,O=Hakan,C=NL" -ext "SAN:c=DNS:localhost,IP:127.0.0.1" -validity 3650 -keystore identity.jks -storepass secret -keypass secret -deststoretype pkcs12


keytool -genkey -alias server -validity 365 -keyalg RSA -keystore keystore "SAN:c=DNS:localhost,IP:127.0.0.1,192.168.1.7"

CN=Guru E, OU=Pega, O=CTS, L=Kavali, ST=AP, C=IN


keytool -genkey -alias tomcat94 -validity 365 -keyalg RSA -keystore D:\keystore\tomcat94.jks -ext "SAN:c=DNS:localhost,IP:127.0.0.1,IP:192.168.1.7"


keytool -genkeypair -keyalg RSA -keysize 2048 -alias stackoverflow -dname "CN=stackoverflow,OU=Hakan,O=Hakan,C=NL" -ext "SAN:c=DNS:localhost,IP:127.0.0.1" -validity 3650 -keystore identity.jks -storepass secret -keypass secret -deststoretype pkcs12

/* https://www.geeksforgeeks.org/difference-between-truststore-and-keystore-in-java/ */

/* https://stackoverflow.com/questions/7812444/how-do-i-import-an-existing-java-keystore-jks-file-into-a-java-installation */

keytool -list -v -keystore D:\86\PRPCPersonalEdition\jre1.8.0_121\lib\security\cacerts
keytool -export -alias tomcat92 -file D:\keystore\tomcat92 -keystore D:\keystore\tomcat92.jks
keytool -import -alias tomcat92 -file D:\keystore\tomcat92 -keystore D:\86\PRPCPersonalEdition\jre1.8.0_121\lib\security\cacerts
keytool -importkeystore -srckeystore D:\keystore\tomcat92.jks -destkeystore D:\86\PRPCPersonalEdition\jre1.8.0_121\lib\security\cacerts
changeit
tomcat92

set "JAVA_OPTS=%JAVA_OPTS% -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Djavax.net.debug=ssl:handshake"

/* Adding tomcat ssl settings *
https://tomcat.apache.org/tomcat-7.0-doc/ssl-howto.html

/* Linux */
keytool -genkey -alias tomcat94 -validity 365 -keyalg RSA -keystore /opt/ssl/tomcat94.jks -ext "SAN:c=DNS:localhost,IP:127.0.0.1,IP:192.168.1.7,IP:192.168.1.5,IP:192.168.1.6,DNS:guekamba-mh0zp.local,DNS:guru-rhel8.local,DNS:ambin03600.local"

/* Windows */
keytool -genkey -alias tomcat94 -validity 365 -keyalg RSA -keystore C:\guru\87\tomcat94.jks -ext "SAN:c=DNS:localhost,IP:127.0.0.1,IP:192.168.1.7,IP:192.168.1.5,IP:192.168.1.6,DNS:guekamba-mh0zp.local,DNS:guru-rhel8.local,DNS:ambin03600.local"

/* https://www.sslshopper.com/article-most-common-java-keytool-keystore-commands.html */


keytool -import -trustcacerts -alias tomcat94 -file /opt/ssl/tomcat94.jks -keystore cacerts
keytool error: java.lang.Exception: Input not an X.509 certificate

keytool -importkeystore -srckeystore /opt/ssl/tomcat94.jks -destkeystore cacerts
/Users/c302318/Desktop/peony/softwares/ssl

keytool -importkeystore -srckeystore /Users/c302318/Desktop/peony/softwares/ssl/tomcat94.jks -destkeystore cacerts
Import command completed:  1 entries successfully imported, 0 entries failed or cancelled

Warning:
The JKS keystore uses a proprietary format. It is recommended to migrate to PKCS12 which is an industry standard format using "keytool -importkeystore -srckeystore /usr/lib/jvm/java-11-openjdk-11.0.16.0.8-1.el8_6.x86_64/lib/security/cacerts -destkeystore /usr/lib/jvm/java-11-openjdk-11.0.16.0.8-1.el8_6.x86_64/lib/security/cacerts -deststoretype pkcs12".

keytool -list -cacerts  -alias tomcat94

keytool -list -keystore  /opt/java/jdk1.8.0_121/jre/lib/security/cacerts -alias tomcat94

/etc/pki/java

The JKS keystore uses a proprietary format. It is recommended to migrate to PKCS12 which is an industry standard format using "keytool -importkeystore -srckeystore C:\guru\87\tomcat94.jks -destkeystore C:\guru\87\tomcat94.jks -deststoretype pkcs12".

<Connector
           protocol="org.apache.coyote.http11.Http11NioProtocol"
           port="8443" maxThreads="200"
           scheme="https" secure="true" SSLEnabled="true"
           keystoreFile="C:\guru\87\tomcat94.jks" keystorePass="tomcat94"
           clientAuth="false" sslProtocol="TLS"/>

/*  
https://www.youtube.com/watch?v=d8OpUcHzTeg
 ssh-keygen -R guru-rhel8.local
 mkdir -p ca/{root-ca,sub-ca,server}/{private,certs,newcerts,crl,csr}
 chmod -v 700 ca/{root-ca,sub-ca,server}/private
 touch ca/{root-ca,sub-ca}/{index,serial}
 openssl rand -hex 16
 openssl rand -hex 16 > ca/root-ca/serial
 openssl rand -hex 16 > ca/sub-ca/serial
 cd ca/server/private
 openssl req -new -newkey rsa:2048 -days 365 -nodes -x509 -subj '/CN=www.example.com' -keyout server.key -out server.crt
 openssl x509 -text -in server.crt -noout

 -- private keys
 openssl genrsa -aes256 -out root-ca/private/ca.key 4096 // root ca
 openssl genrsa -aes256 -out sub-ca/private/sub-ca.key 4096 // sub ca
 openssl genrsa -out  server/private/server.key 2048 // server 

 -- crt 
  -- root 
  openssl req -config root-ca.conf -key private/ca.key -new -x509 -days 7500 -sha256 -extensions v3_ca -out certs/ca.crt
  openssl x509 -noout -in certs/ca.crt -text

  -- sub
  nano sub-ca.conf
  openssl req -config sub-ca.conf -new -key private/sub-ca.key -sha256 -out csr/sub-ca.csr
  -- sign with root key
  openssl ca -config root-ca.conf -extensions v3_intermediate_ca -days 3650 -notext -in ../sub-ca/csr/sub-ca.csr -out ../sub-ca/certs/sub-ca.crt
  openssl x509 -noout -text -in ../sub-ca/certs/sub-ca.crt

  -- server 
  openssl req -new -key private/server.key -sha256 -out csr/server.csr
   -- sign with sub key
   openssl ca -config sub-ca.conf -extensions server_cert -days 3650 -notext -in ../server/csr/server.csr -out ../server/certs/server.crt

   openssl s_server -accept 443 -www -key private/server.key -cert certs/server.crt -CAfile ../sub-ca/certs/sub-ca.crt
  

openssl rsa -in server.key -text > private.pem
openssl x509 -inform PEM -in server.crt > public.pem

https://serverfault.com/questions/715827/how-to-generate-key-and-crt-file-from-jks-file-for-httpd-apache-server

curl -k -v -GET --key  /Users/c302318/Desktop/peony/softwares/ssl/cb/tomcat.key --cert  /Users/c302318/Desktop/peony/softwares/ssl/cb/tomcat.pem https://localhost:8443/
.;

/usr/libexec/java_home -V

--mac

keytool -importkeystore -srckeystore ~/Downloads/tomcat94.jks -destkeystore cacerts

keytool -list -keystore  /opt/java/jdk1.8.0_121/jre/lib/security/cacerts -alias tomcat94

keytool -list -keystore  /Library/Java/JavaVirtualMachines/jdk1.8.0_291.jdk/Contents/Home/jre/lib/security/cacerts -alias tomcat94

scp root@guru-rhel8.local:/opt/ssl/tomcat94.jks ~/Desktop/peony/softwares/ssl/ 

keytool -importkeystore -srckeystore ~/Desktop/peony/softwares/ssl/tomcat94.jks -destkeystore ~/Desktop/peony/softwares/java/jdk8/jre/lib/security/cacerts

 keytool -list -keystore  ~/Desktop/peony/softwares/java/jdk8/jre/lib/security/cacerts -alias tomcat94


 /* latest */

   513  keytool -genkey -alias tomcat -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650
  514  ls
  515  cat keystore.p12 
  516  clear
  517  mv keystore.p12 ../
  518  ls
  519  cd ..
  520  ls
  521  mv keystore.p12 ../
  522  ls
  523  cd ..
  524  ls
  525  mv keystore.p12 ../
  526  ls
  527  cd ..
  528  ls
  529  ls -l
  530  curl -x GET https://localhost:8443/greeting?name=guru
  531  curl -X GET https://localhost:8443/greeting?name=guru
  532  curl https://localhost:8443/greeting?name=guru
  533  curl --cert keystore.p12 https://localhost:8443/greeting?name=guru
  534  curl --cert keystore.p12 -X GET https://localhost:8443/greeting?name=guru
  535  openssl pkcs12 -in keystore.p12 -nocerts -out private.key
  536  ls
  537  cat private.key 
  538  curl --cert keystore.p12 --key private.key -X GET https://localhost:8443/greeting?name=guru
  539  openssl pkcs12 -in keystore.p12 -clcerts -nokeys -out keystore.crt
  540  ls
  541  cat keystore.crt
  542  curl --cert keystore.crt --key private.key -X GET https://localhost:8443/greeting?name=guru

  /* ignore self signed certificate */
  curl --cert keystore.crt --key private.key -k -X GET https://localhost:8443/greeting?name=guru
